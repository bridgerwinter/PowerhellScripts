
#Certified using PowerShell-User with sha1 hash. 
#certified changesmademsg.exe
#PowerShell V2 Host Forms Win32
$Login_Load={
	
}
#USE .TRIM() OR YOURE GOING TO HAVE A BAD TIME
$buttonENTER_Click = {
	Main
}

function MakeNewForm{
	$Login.Close()
	$Login.Dispose()
	$Login_Load
	
}

function Main()
{
	$newuser = $username.Text | Out-String
	$newpass = $password.Text | Out-String
	$Login.WindowState = 1
	$newuser = $newuser.Substring(0, $newuser.Length - 1)
	$newpass = $newpass.Substring(0, $newpass.Length - 1)
	GoTo_Run $newuser $newpass
}

function GoTo_Run($newuser,$newpass)
{
	Get_Credentials $newuser $newpass
	$exp = Get-Process Explorer++ -ErrorAction SilentlyContinue
	if(-not $exp)
	{
		$Login.WindowState = 'Normal'
		[System.Windows.Forms.MessageBox]::Show("Invalid credentials, please try again.")
		$Login.Close()
		}
	while (get-process | ?{ $_.path -eq "\\pathto\Explorer++\Explorer++.exe" })
	{
		$valid = 1
	}
	if ($valid -eq 1)
	{
		\\displayerrorbox\errorbox.exe
	}
}

function Get_Credentials($newuser, $newpass)
{
	$newuser = $newuser.Trim()
	$data = (Get-Content '\\pathtofilecontainingcreds\peerReview.crosswalk')
	foreach ($line in $data)
	{
		$a, $b = ($line.split('|'))
		$a = $a.Trim()
		if ($a -eq $newuser)
		{
			$folder = $b
			break
		}
	}
	$newpass = $newpass.Trim()
	$securePass = ConvertTo-SecureString $newpass -AsPlainText -Force
	$credential = New-Object System.Management.Automation.PSCredential peppers\$newuser, $securePass
	Start-Process \\aji\common\peerReview\peerReviewFinal\Explorer++\Explorer++.exe "\\pathtofolder\$folder" -Credential $credential
}

$Help_LinkClicked=[System.Windows.Forms.LinkLabelLinkClickedEventHandler]{
	Start-Process \\pathtoinstructions\peerReviewInstructions.pdf
}
